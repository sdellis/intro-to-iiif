<!doctype html>
<html>
	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

		<title>Intro to IIIF (for front-end developers)</title>

		<link rel="stylesheet" href="css/reveal.css">
		<link rel="stylesheet" href="css/theme/black.css">

		<!-- Theme used for syntax highlighting of code -->
		<link rel="stylesheet" href="lib/css/zenburn.css">

		<link rel="stylesheet" href="css/overrides.css">

		<!-- Printing and PDF exports -->
		<script>
			var link = document.createElement( 'link' );
			link.rel = 'stylesheet';
			link.type = 'text/css';
			link.href = window.location.search.match( /print-pdf/gi ) ? 'css/print/pdf.css' : 'css/print/paper.css';
			document.getElementsByTagName( 'head' )[0].appendChild( link );
		</script>
	</head>
	<body>
		<div class="reveal">
			<div class="slides">
				<section>
					<h1>Intro to IIIF</h1>
					<h3>A hands-on guide to <br/>unlocking the world's images</h3>
					<p>
						<small>Created for edUi 2017 by <a href="http://sdellis.com">Shaun Ellis</a> / <a href="http://twitter.com/sdellis">@sdellis</a></small>
					</p>
					<p>
						<small>Slides: <a href="http://sdellis.com/intro-to-iiif/">http://sdellis.com/intro-to-iiif/</a></small>
					</p>
						<a class="logo" href="http://iiif.io" title="IIIF : International Image Interoperability Framework" />IIIF</a>
				</section>

				<section>
					<section>
						<h2>Overview</h2>
						<p>IIIF is a series of APIs (application programming interface) that work together to enable access for images on the Web.</p>
					</section>
					<section>
						<h2>Wut?</h2>
					</section>
					<section>
						<p>For one thing, it means that content providers can publish <strong style="color:red">high-resolution</strong> images that are quickly viewable at great detail.</p>
					</section>
					<section>
						<p>It also means that IIIF users can read and <strong style="color:red">collaboratively annotate</strong> published books.</p>
					</section>
					<section>
						<p>It means a whole lot of things, and we'll explore some of the possibilities today.</p>
					</section>
				</section>

				<section>
					<section>
						<h2>What is IIIF?</h2>
						<p><strong style="color:red">IIIF is a series of APIs</strong> that allows you to access images on the Web.
							These APIs are community and use case driven and really were formed out of common needs from
							organizations delivering images on the Web.</p>
					</section>
					<section>
						<p>This can be as simple as just putting an image tag in a webpage.</p>
						<p><img src="https://stacks.stanford.edu/image/iiif/hg676jb4964%2F0380_796-44/1015,1460,799,824/pct:25/0/default.jpg"></p>
					</section>
					<section>
						<p>Or as advanced as reading a large book in its entirety.</p>
						<iframe src="https://universalviewer.io/uv.html?manifest=https://api.bl.uk/metadata/iiif/ark:/81055/vdc_00000004216E/manifest.json" style="width: 100%; height: 500px;"></iframe>
					</section>
					<section>
						<p>We can finally share images, as well as viewer software development efforts. Simply put, IIIF enables organizations to solve common problems together.</p>
					</section>
					<section>
						<p>IIIF not only refers to these APIs now, but now also to the community of content providers, software developers, and researchers who are using the technology.</p>
					</section>
				</section>

				<section>
					<section>
						<h2>What can IIIF do?</h2>
						<p>We just saw that IIIF has several applications for using images on the Web. There are many more.</p>
					</section>
					<section>
						<p>IIIF can be used for georeferencing historic maps</p>
						<figure class="figure">
					    <a href="http://www.georeferencer.com/">
					      <img src="https://www.learniiif.org/assets/georeferencer.jpg" class="img-fluid">
					    </a>
					    <figcaption class="figure-caption">GeoRefencer</figcaption>
					  </figure>
					</section>
					<section>
						<p>Or work with others to annotatate a manuscript</p>
						<figure class="figure">
					    <a href="http://projectmirador.org/">
					      <img src="https://www.learniiif.org/assets/mirador-anno.gif" class="img-fluid">
					    </a>
					  </figure>
					</section>
					<section>
						<p>Thanks to IIIF, different applications can reuse the exact same content!</p>
						<p>The API specifications have been driven by <strong style="color:red;">community use cases</strong> and integration with
							other Web standards.</p>
					</section>
					<section>
						<p>As of September 2017 the current IIIF Technical Specifications are:</p>
							<ul>
							  <li><a href="http://iiif.io/api/image/2.1/">IIIF Image API</a></li>
							  <li><a href="http://iiif.io/api/presentation/2.1">IIIF Presentation API</a></li>
							  <li><a href="http://iiif.io/api/auth/1.0">IIIF Authentication API</a></li>
							  <li><a href="http://iiif.io/api/search/1.0">IIIF Search API</a></li>
							</ul>
						<p>The two most established IIIF APIs are the Image and Presentation APIs. Let’s get started with the Image API.</p>
					</section>
				</section>

				<section>
					<section>
						<h2>Image API</h2>
						<p>The IIIF Image API is designed for standardization of requesting and delivering images on the Web. What does that mean beyond the <strong style="color:red;">&lt;img&gt;</strong> tag?</p>
					</section>
					<section>
						<p>We saw earlier that you can use it to embed an image in a webpage. Here is that example again.</p>
						<iframe width="100%" height="300" src="https://jsfiddle.net/sdellis/vjpgsbfw/embedded/result,html/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>
						<p>This example uses the Image API to request an image from a IIIF image server. If you click on “HTML” you can see the URL that is being requested.</p>
					</section>
					<section>
						<strong style="color:red;">&lt;img src="https://stacks.stanford.edu/image/iiif/<br/>
hg676jb4964%2F0380_796-44/1015,1460,799,824/pct:50/0/default.jpg"&gt;</strong>
						<p>This URL is crafted to extract a specific region, at a relative size, from the high quality original image.
							The original image is measured at 5426 x 3820 pixels and has a file size of 4.7MB. Bad UX for web users! The IIIF Image API allows you to
							serve out derivative versions of these images in a standardized way, without having to generate derivatives
							in advance.</p>
					</section>
					<section>
						<h3>Zoomable Images</h3>
						<a href="https://mejackreed.github.io/Leaflet-IIIF/examples/index.html?url=https://libimages.princeton.edu/loris/pudl0123%2F8172070%2F02%2F00000001.jp2/info.json" target="_blank">View in a new tab.</a>
						<iframe src="https://mejackreed.github.io/Leaflet-IIIF/examples/index.html?url=https://libimages.princeton.edu/loris/pudl0123%2F8172070%2F02%2F00000001.jp2/info.json" frameborder="0" width="100%" height="500px"></iframe>
					</section>
					<section>
						<p>Several different libraries now exist to use the IIIF Image API to provide a “deep zoom” for the images.
							The previous slide contains an example of the Leaflet-IIIF.
							Here you can see the entire image and zoom in with great detail. Using tiled zoom enables viewing of high
							resolution images without needing to download the full resolution images.</p>
					</section>
					<section>
						<h3>How does all of this work?</h3>
						<p>The IIIF Image API server knows how to efficiently deliver these images to the viewer client.
							The viewer client knows what types of images that it can request from the server.
							The client gets this information from the server through a Image Information request.</p>

						<p>Let’s dive into more of how the Image API works.</p>
					</section>
					<section>
					<h3>Image API Playground</h3>
					<p>The IIIF Image API makes requests to images using a specified URI syntax which changes what image is requested.
						The syntax consists of a way to identify the image to be requested, as well as additional parameters that can be
						used to modify the way the image comes back. These request parameters can modify the region of the image, its size,
						rotation, quality, and the image format.
						See the <a href="http://iiif.io/api/image/2.1/#image-request-parameters">API documentation</a> for parameter options
						you can use.</p>


					<div class="highlight"><span>{</span><span class="err">scheme</span><span>}</span><span class="err">://</span><span>{</span><span class="err">server</span><span class="p">}{</span><span class="err">/prefix</span><span>}</span><span class="err">/</span><span class="p">{</span><span class="err">identifier</span><span class="p">}</span><span class="err">/</span><span class="p">{</span><span class="err">region</span><span class="p">}</span><span class="err">/</span><span>{</span><span class="err">size</span><span class="p">}</span><span class="err">/</span><span class="p">{</span><span class="err">rotation</span><span class="p">}</span><span class="err">/</span><span class="p">{</span><span class="err">quality</span><span class="p">}</span><span class="err">.</span><span class="p">{</span><span class="err">format</span><span class="p">}</span></div>

				</section>
				<section>
					<h3>Image API Region Examples</h3>
					<img src="img/image-api-region.png" alt="image api region examples"/>
				</section>
				<section>
					<h3>Image API Size Examples</h3>
					<img src="img/image-api-size.png" alt="image api size examples"/>
				</section>
					<section>
						<h3><a href="http://imageapiplayground.surge.sh/" target="_blank">Image API Playground</a></h3>
						<iframe src="http://imageapiplayground.surge.sh/" frameborder="0" width="100%" height="500px"></iframe>
					</section>
					<section>
						<p>Now that we have learned the basics of requesting images, we need to figure out how to request images that are grouped together.</p>
					</section>
				</section>
				<section>
					<section>
						<h2>Presentation API</h2>
						<p>The IIIF Presentation API gives us a specification for “presenting” images. A common example to think about this is a book.</p>
					</section>
					<section>
						<p>If you want to display a group of images that represent pages in a book, you first need to know a few things about that book:</p>
						<ul>
							<li>Title</li>
							<li>Pages</li>
							<li>Page Order</li>
							<li>Viewing Direction</li>
					</section>
					<section>
						<p>This and much more can be accomplished using the <a href="http://iiif.io/api/presentation/2.1/">IIIF Presentation API</a>.</p>
					</section>
					<section>
						<h3>Core Concepts</h3>
						<p>The Presentation API consists of a JSON-LD server response that specifies how resources
							(images) should be presented.
							There are a few <a href="http://iiif.io/api/presentation/2.1/#resource-type-overview">base concepts</a> that are used throughout the IIIF documentation and community and are important to understand.</p>
					</section>
					<section>
						<h3>Core Concepts</h3>
						<img src="img/presentation.png" height="400px" alt="Presentation API diagram"/>
					</section>
					<section>
						<h4>Manifest</h4>
						<p>A manifest represents the overall description of the “thing” (object) being presented. This could be a book, a photograph, or an image of a tree.</p>
					</section>
					<section>
						<h4>Manifest Example</h4>
						<pre><code class="hljs" data-trim contenteditable>
{
  "@context": "http://iiif.io/api/presentation/2/context.json",
  "@type": "sc:Manifest",
  "@id": "http://example.org/iiif/book1/manifest",

  "label": "Book 1",
  "metadata": [
    {"label": "Author", "value": "Anne Author"},
    {"label": "Published", "value": [
        {"@value": "Paris, circa 1400", "@language": "en"},
        {"@value": "Paris, environ 14eme siecle", "@language": "fr"}
        ]
    }
  ],
  "description": "A longer description of this example book.",
  "navDate": "1856-01-01T00:00:00Z",

  "license": "https://creativecommons.org/publicdomain/zero/1.0/",
  "attribution": "Provided by Example Organization",
  "service": {
    "@context": "http://example.org/ns/jsonld/context.json",
    "@id": "http://example.org/service/example",
    "profile": "http://example.org/docs/example-service.html"
  },
...
  "sequences": [
...
						</code></pre>
					</section>
					<section>
						<h4>Sequence</h4>
						<p>The next key concept, is a sequence. A sequence defines the order of view of the object. A manifest can have more than one valid sequence if for some reason it has been reordered.</p>
					</section>
					<section>
						<h4>Sequence Example</h4>
						<pre><code class="hljs" data-trim contenteditable>
...
  "sequences": [
    {
      "@id": "http://example.org/iiif/book1/sequence/normal",
      "@type": "sc:Sequence",
      "label": "Current Page Order",
      "viewingDirection": "left-to-right",
      "viewingHint": "paged",
      "canvases": [
...
						</code></pre>
					</section>
					<section>
						<h4>Canvas</h4>
						<p>Canvases are used as a container for adding content to the Manifest. For instance, a canvas could contain both an image of a book page and associated transcriptions for that page.</p>
					</section>
					<section>
						<h4>Canvas Example</h4>
						<pre><code class="hljs" data-trim contenteditable>
...
  "canvases": [
    {
      "@id": "http://example.org/iiif/book1/canvas/p1",
      "@type": "sc:Canvas",
      "label": "p. 1",
      "height":1000,
      "width":750,
      "images": [
...
						</code></pre>
					</section>
					<section>
						<h4>Content</h4>
						<p>Content is used to describe viewable resources that can be placed on a canvas. These could be images that represent a book page, transcription text, or annotation notes.</p>
					</section>
					<section>
						<h4>Content Example</h4>
						<pre><code class="hljs" data-trim contenteditable>
...
"images": [
  {
    "@type": "oa:Annotation",
    "motivation": "sc:painting",
    "resource":{
      "@id": "http://example.org/iiif/book1/res/page1.jpg",
      "@type": "dctypes:Image",
      "format": "image/jpeg",
      "service": {
        "@context": "http://iiif.io/api/image/2/context.json",
        "@id": "http://example.org/images/book1-page1",
        "profile": "http://iiif.io/api/image/2/level1.json"
      },
      "height":2000,
      "width":1500
    },
    "on": "http://example.org/iiif/book1/canvas/p1"
  }
],
...
						</code></pre>
					</section>
					<section>
						<p>There are some <a href="http://iiif.io/api/presentation/2.1/#additional-types">more resource types</a> used in the IIIF Presentation API but lets just focus on these now.</p>
					</section>
					<section>
						<h4>Back to the example</h4>
						<p>Now that we have somewhat of an idea of what these types are, lets relate them back to our example of the book.</p>
					</section>
					<section>
						<ul>
						  <li><strong>Manifest</strong> - Basic information about the book, including whether or not the images should be <a href="http://iiif.io/api/presentation/2.1/#viewinghint">viewed as pages</a></li>
						  <li><strong>Sequence</strong> - Order of the “pages” of the book</li>
						  <li><strong>Canvas</strong> - Virtual container of the “page” of each book</li>
						  <li><strong>Content</strong> - Image of each page, to be added to the canvas</li>
						</ul>
					</section>
					<section>
						<p>A IIIF client consuming this response would now know how to display the book, associated metadata for the book, and what images represent the pages and their order.</p>
					</section>
				</section>
				<section>
						<h1>Hands on portion of the workshop...</h1>
						<p><a href="https://github.com/sdellis/intro-to-iiif/blob/master/README.md" target="_blank">Instructions are here.</a></p>
				</section>
				<section>
					<h3>Join the IIIF Community</h3>
					<p>The <a href="http://iiif.io/community/" target="_blank">IIIF Community</a> page is a great place to get started.</p>
					<ul>
						<li><a href="https://groups.google.com/forum/#!forum/iiif-discuss" target="_blank">IIIF-discuss</a> is a Google Group that is a good place to start with asking questions and discussing IIIF.</li>
						<li>Join the <a href="http://bit.ly/iiif-slack" target="_blank">IIIF Slack</a> team</li>
						<li><a href="http://iiif.io/community/call" target="_blank">http://iiif.io/community/call</a> participate in a bi-weekly teleconference</li>
						<li><a href="https://github.com/IIIF/awesome-iiif/blob/master/readme.md" target="_blank">Awesome IIF</a></li>
					</ul>
						<a class="logo" href="http://iiif.io" title="IIIF : International Image Interoperability Framework" />IIIF</a>
				</section>
				<section>
					<h1>Thank you.</h1>
					<p>
						<small>With a special thanks to Jack Reed and Drew Winget at Stanford, as most of this presentation was adapted from their work.</small>
					</p>
					<p>
						<small><a href="http://sdellis.com">Shaun Ellis</a> / <a href="http://twitter.com/sdellis">@sdellis</a></small>
					</p>

						<a class="logo" href="http://iiif.io" title="IIIF : International Image Interoperability Framework" />IIIF</a>
				</section>
			</div>
		</div>

		<script src="lib/js/head.min.js"></script>
		<script src="js/reveal.js"></script>

		<script>
			// More info about config & dependencies:
			// - https://github.com/hakimel/reveal.js#configuration
			// - https://github.com/hakimel/reveal.js#dependencies
			Reveal.initialize({
				dependencies: [
					{ src: 'plugin/markdown/marked.js' },
					{ src: 'plugin/markdown/markdown.js' },
					{ src: 'plugin/notes/notes.js', async: true },
					{ src: 'plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }
				]
			});
		</script>
	</body>
</html>
